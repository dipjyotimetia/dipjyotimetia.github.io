"use strict";(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[8906],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=l,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(b,o(o({ref:t},p),{},{components:n})):r.createElement(b,o({ref:t},p))}));function b(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:l,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7935:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),l=(n(7294),n(3905));const a={id:"kubernetes",title:"kubernetes",sidebar_label:"Kubernetes"},o=void 0,s={unversionedId:"snippets/cloud/ci/kubernetes",id:"snippets/cloud/ci/kubernetes",title:"kubernetes",description:"What can Kubernetes do for you?",source:"@site/docs/snippets/cloud/ci/kubernetes.md",sourceDirName:"snippets/cloud/ci",slug:"/snippets/cloud/ci/kubernetes",permalink:"/docs/snippets/cloud/ci/kubernetes",draft:!1,editUrl:"https://github.com/dipjyotimetia/Docs/docs/snippets/cloud/ci/kubernetes.md",tags:[],version:"current",frontMatter:{id:"kubernetes",title:"kubernetes",sidebar_label:"Kubernetes"},sidebar:"Docs",previous:{title:"Docker",permalink:"/docs/snippets/cloud/ci/docker"},next:{title:"Jenkins",permalink:"/docs/snippets/cloud/ci/jenkins"}},i={},c=[{value:"Learn kubernetes basiscs",id:"learn-kubernetes-basiscs",level:3},{value:"Create kubernetes cluser",id:"create-kubernetes-cluser",level:3},{value:"Create kubernetes deployment from a image",id:"create-kubernetes-deployment-from-a-image",level:2},{value:"Create kubernetes service",id:"create-kubernetes-service",level:2},{value:"Get Services",id:"get-services",level:2},{value:"Creating POD",id:"creating-pod",level:2},{value:"Port forwarding",id:"port-forwarding",level:3},{value:"Get logs",id:"get-logs",level:3},{value:"Interactive shell inside the pod",id:"interactive-shell-inside-the-pod",level:3},{value:"Check deployments",id:"check-deployments",level:3},{value:"Scale the deployment",id:"scale-the-deployment",level:3},{value:"Trigger rolling update",id:"trigger-rolling-update",level:3},{value:"Delete Cluster",id:"delete-cluster",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"What can Kubernetes do for you?\nWith modern web services, users expect applications to be available 24/7, and developers expect to deploy new versions of those applications several times a day. Containerization helps package software to serve these goals, enabling applications to be released and updated without downtime. Kubernetes helps you make sure those containerized applications run where and when you want, and helps them find the resources and tools they need to work. Kubernetes is a production-ready, open source platform designed with Google's accumulated experience in container orchestration, combined with best-of-breed ideas from the community.")),(0,l.kt)("h3",{id:"learn-kubernetes-basiscs"},"Learn kubernetes basiscs"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tutorials/kubernetes-basics/"},"https://kubernetes.io/docs/tutorials/kubernetes-basics/")),(0,l.kt)("h3",{id:"create-kubernetes-cluser"},"Create kubernetes cluser"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\ngcloud container clusters create [CLUSTER-NAME]\n\ngcloud container clusters get-credentials [CLUSTER-NAME]\n")),(0,l.kt)("h2",{id:"create-kubernetes-deployment-from-a-image"},"Create kubernetes deployment from a image"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0\n")),(0,l.kt)("h2",{id:"create-kubernetes-service"},"Create kubernetes service"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl expose deployment hello-server --type=LoadBalancer --port 8080\n")),(0,l.kt)("p",null,'In this command:\n--port specifies the port that the container exposes.\ntype="LoadBalancer" creates a Compute Engine load balancer for your container.'),(0,l.kt)("h2",{id:"get-services"},"Get Services"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get service\n")),(0,l.kt)("h2",{id:"creating-pod"},"Creating POD"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: monolith\n  labels:\n    app: monolith\nspec:\n  containers:\n    - name: monolith\n      image: kelseyhightower/monolith:1.0.0\n      args:\n        - "-http=0.0.0.0:80"\n        - "-health=0.0.0.0:81"\n        - "-secret=secret"\n      ports:\n        - name: http\n          containerPort: 80\n        - name: health\n          containerPort: 81\n      resources:\n        limits:\n          cpu: 0.2\n          memory: "10Mi"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create -f pods/monolith.yaml\nkubectl get pods\nkubectl describe pods monolith\n")),(0,l.kt)("h3",{id:"port-forwarding"},"Port forwarding"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl port-forward monolith 10080:80\n")),(0,l.kt)("h3",{id:"get-logs"},"Get logs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs monolith\n## Stream logs\nkubectl logs -f monolith\n")),(0,l.kt)("h3",{id:"interactive-shell-inside-the-pod"},"Interactive shell inside the pod"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl exec monolith --stdin --tty -c monolith /bin/sh\n\n### Check the external connectivity\nping -c 3 google.com\n")),(0,l.kt)("h3",{id:"check-deployments"},"Check deployments"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl explain deployment\nkubectl explain deployment --recursive\nkubectl explain deployment.metadata.name\n")),(0,l.kt)("h3",{id:"scale-the-deployment"},"Scale the deployment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl scale deployment hello --replicas=5\n## Verify the scale\nkubectl get pods | grep hello- | wc -l\n")),(0,l.kt)("h3",{id:"trigger-rolling-update"},"Trigger rolling update"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl edit deployment hello\n\nkubectl get replicaset\n\nkubectl rollout history deployment/hello\n\nkubectl rollout pause deployment/hello\n\nkubectl rollout status deployment/hello\n\nkubectl get pods -o jsonpath --template=\'{range .items[*]}{.metadata.name}{"\\t"}{"\\t"}{.spec.containers[0].image}{"\\n"}{end}\'\n\nkubectl rollout resume deployment/hello\n\nkubectl rollout undo deployment/hello\n')),(0,l.kt)("h2",{id:"delete-cluster"},"Delete Cluster"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud container clusters delete [CLUSTER-NAME]\n")))}u.isMDXComponent=!0}}]);