"use strict";(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[3272],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return g}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=o.createContext({}),i=function(e){var t=o.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=i(e.components);return o.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=i(r),g=n,m=d["".concat(u,".").concat(g)]||d[g]||s[g]||a;return r?o.createElement(m,c(c({ref:t},p),{},{components:r})):o.createElement(m,c({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var i=2;i<a;i++)c[i]=r[i];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},766:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return s}});var o=r(3117),n=r(102),a=(r(7294),r(3905)),c=["components"],l={id:"google1",title:"Get Started",sidebar_label:"Get Started"},u=void 0,i={unversionedId:"snippets/cloud/google/google1",id:"snippets/cloud/google/google1",title:"Get Started",description:"Google cloud sketch",source:"@site/docs/snippets/cloud/google/google1.md",sourceDirName:"snippets/cloud/google",slug:"/snippets/cloud/google/google1",permalink:"/docs/snippets/cloud/google/google1",draft:!1,editUrl:"https://github.com/dipjyotimetia/Docs/docs/snippets/cloud/google/google1.md",tags:[],version:"current",frontMatter:{id:"google1",title:"Get Started",sidebar_label:"Get Started"},sidebar:"Docs",previous:{title:"Quick Exam Reference Guide",permalink:"/docs/snippets/cloud/aws/aws14"},next:{title:"Google Kubernetes Engine",permalink:"/docs/snippets/cloud/google/gke"}},p={},s=[{value:"Google cloud sketch",id:"google-cloud-sketch",level:2},{value:"Example repository",id:"example-repository",level:2},{value:"Activate project",id:"activate-project",level:3},{value:"Create cloud pubsub topic",id:"create-cloud-pubsub-topic",level:3},{value:"Create service account &amp; add roles",id:"create-service-account--add-roles",level:3},{value:"Enable the project to create Pub/Sub authentication tokens",id:"enable-the-project-to-create-pubsub-authentication-tokens",level:3},{value:"Cloud storage trigger",id:"cloud-storage-trigger",level:3},{value:"Deploy to container registry",id:"deploy-to-container-registry",level:3},{value:"Build and deploy to cloud run",id:"build-and-deploy-to-cloud-run",level:3},{value:"Get deployment url",id:"get-deployment-url",level:3}],d={toc:s};function g(e){var t=e.components,r=(0,n.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"google-cloud-sketch"},"Google cloud sketch"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://thecloudgirl.dev/"},"SketchNotes"),"   "),(0,a.kt)("h2",{id:"example-repository"},"Example repository"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/rosera/pet-theory.git"},"GitHub")),(0,a.kt)("h3",{id:"activate-project"},"Activate project"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export PROJECT_ID=\"\"\ngcloud config list project\ngcloud config set project $PROJECT_ID\ngcloud config set project $(gcloud projects list --format='value(PROJECT_ID)' --filter='qwiklabs-gcp')\n")),(0,a.kt)("h3",{id:"create-cloud-pubsub-topic"},"Create cloud pubsub topic"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'export TOPIC_NAME=""\nexport TOPIC_SUBSCRIPTION_NAME=""\nexport SERVICE_ACCOUNT_NAME=""\nexport SERVICE_URL=""\n#pubsub create topic\ngcloud pubsub topics create $TOPIC_NAME\n#pubsub subscription\ngcloud pubsub subscriptions create $TOPIC_SUBSCRIPTION_NAME --topic $TOPIC_NAME --push-endpoint=$SERVICE_URL --push-auth-service-account=$SERVICE_ACCOUNT_NAME@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com\n')),(0,a.kt)("h3",{id:"create-service-account--add-roles"},"Create service account & add roles"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'export SERVICE_ACCOUNT_NAME=""\nexport SERVICE_NAME=""\nexport DISPLAY_NAME=""\n\ngcloud iam service-accounts create $SERVICE_ACCOUNT_NAME --display-name $DISPLAY_NAME\n\ngcloud run services add-iam-policy-binding $SERVICE_NAME --member=serviceAccount:$SERVICE_ACCOUNT_NAME@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com --role=roles/run.invoker --region us-central1 --platform managed\n')),(0,a.kt)("h3",{id:"enable-the-project-to-create-pubsub-authentication-tokens"},"Enable the project to create Pub/Sub authentication tokens"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'PROJECT_NUMBER=$(gcloud projects list --filter="qwiklabs-gcp" --format=\'value(PROJECT_NUMBER)\')\n\ngcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT --member=serviceAccount:service-$PROJECT_NUMBER@gcp-sa-pubsub.iam.gserviceaccount.com --role=roles/iam.serviceAccountTokenCreator\n\ncurl -X GET -H "Authorization: Bearer $(gcloud auth print-identity-token)" $SERVICE_URL\n')),(0,a.kt)("h3",{id:"cloud-storage-trigger"},"Cloud storage trigger"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud pubsub subscriptions create $TOPIC_SUBSCRIPTION \\\n  --topic $TOPIC_NAME \\\n  --push-endpoint=$SERVICE_URL \\\n  --push-auth-service-account=$SERVICE_ACCOUNT@$GOOGLE_CLOUD_PROJECT.iam.gserviceaccount.com\n")),(0,a.kt)("h3",{id:"deploy-to-container-registry"},"Deploy to container registry"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'export DOCKER_TAG="rest-api:0.1"\ngcloud builds submit \\\n  --tag gcr.io/$GOOGLE_CLOUD_PROJECT/$DOCKER_TAG\n')),(0,a.kt)("h3",{id:"build-and-deploy-to-cloud-run"},"Build and deploy to cloud run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'export SERVICE_NAME=""\nexport DOCKER_TAG="rest-api:0.1"\ngcloud beta run deploy $SERVICE_NAME \\\n  --image gcr.io/$GOOGLE_CLOUD_PROJECT/$DOCKER_TAG \\\n  --platform managed \\\n  --region us-central1 \\\n  --allow-unauthenticated\n')),(0,a.kt)("h3",{id:"get-deployment-url"},"Get deployment url"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'export LAB_REPORT_SERVICE_URL=$(gcloud run services describe lab-report-service --platform managed --region us-central1 --format="value(status.address.url)")\n')))}g.isMDXComponent=!0}}]);