(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[3110],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7080:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(4034),a=n(9973),o=(n(7294),n(3905)),i=["components"],s={id:"taurus",title:"Taurus",sidebar_label:"Taurus"},l=void 0,u={unversionedId:"snippets/performance/taurus",id:"snippets/performance/taurus",isDocsHomePage:!1,title:"Taurus",description:"Taurus install linux",source:"@site/docs/snippets/performance/taurus.md",sourceDirName:"snippets/performance",slug:"/snippets/performance/taurus",permalink:"/docs/snippets/performance/taurus",editUrl:"https://github.com/dipjyotimetia/Docs/docs/snippets/performance/taurus.md",tags:[],version:"current",frontMatter:{id:"taurus",title:"Taurus",sidebar_label:"Taurus"},sidebar:"Docs",previous:{title:"Get Started",permalink:"/docs/snippets/security/sec1"},next:{title:"VS Code",permalink:"/docs/snippets/ide/vscode"}},c=[{value:"Taurus install linux",id:"taurus-install-linux",children:[],level:3},{value:"Docker command",id:"docker-command",children:[],level:3},{value:"Demo Script 1",id:"demo-script-1",children:[],level:3},{value:"Demo Script 2",id:"demo-script-2",children:[],level:3},{value:"Demo Script 3",id:"demo-script-3",children:[],level:3},{value:"Taurus for docker:",id:"taurus-for-docker",children:[],level:3}],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"taurus-install-linux"},"Taurus install linux"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install java-1.8.0  \nsudo yum remove java-1.7.0-openjdk  \nsudo yum install python default-jre-headless python-tk python-pip python-dev \\ libxml2-dev libxslt-dev zlib1g-dev net-tools  \nsudo yum -y install gcc  \nsudo yum install bzt  \n")),(0,o.kt)("h3",{id:"docker-command"},"Docker command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -v C:\\ccviews\\taurus:/bzt-configs -v C:\\ccviews\\taurus\\artifact:/tmp/artifacts blazemeter/taurus taurus_execution.yml\n")),(0,o.kt)("h3",{id:"demo-script-1"},"Demo Script 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"execution:\n- scenario: testlogin\n  concurrency: 170\n  hold-for: 50s\n  duration: 60\nscenarios:\n  testlogin:\n    headers:\n      Content-type: application/json\n      User-Agent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36'\n    requests:\n    - url: https://\n      method: POST\n      label: '/signin'\n      body:\n        'username': \n        'password': \n      assert-jsonpath:\n        - jsonpath: \"$.ErrorNo\" # path to value, validation fails if path not exists\n          validate: true # validate against expected value\n          expected-value: \"0\" # the value we are expecting to validate, default: false\n          regexp: true  # if the value is regular expression, default: true\n          expect-null: false  # expected value is null\n          invert: false # invert condition \n\nreporting:\n- module: console\n- module: final-stats\n  summary: true\n  percentiles: true\n  failed-labels: false   \n  test-duration: true\n\n")),(0,o.kt)("h3",{id:"demo-script-2"},"Demo Script 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"execution:\n- scenario: testlogin\n  concurrency: 300\n  hold-for: 3000s\n  duration: 1000\nscenarios:\n  testlogin:\n    headers:\n      Content-type: application/json\n      User-Agent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36'\n    requests:\n    - url: https://\n      method: POST\n      body:\n        'username': \n        'password': \n        \nreporting:\n- final-stats\n- console        \n\n")),(0,o.kt)("h3",{id:"demo-script-3"},"Demo Script 3"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'execution:\n- scenario: test\n  concurrency: 2\n  hold-for: 10s\n  duration: 2\nscenarios:\n  test:\n    headers:\n      Content-type: application/json\n    requests:\n    - url: https://******/api/\n      method: GET\n      extract-jsonpath:   \n        masterEventIds: $.result.\n        eventIds: $.result.\n    - url: https://******/api/\n      method: GET\n      label: bpe\n      assert-jsonpath:\n        - "$[0].quantity"\n    \nreporting:\n#- module: blazemeter\n#  report-name: testbpe\n#  test: testbpe\n#  project: testbpe\n- module: passfail\n  criteria:\n  - avg-rt of bpe>100ms for 10s, stop as failed\n  - rc4?? of bpe>1, stop as failed\n  - rc5?? of bpe>1, stop as failed\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.blazemeter.com/blog/how-to-create-a-lightweight-performance-monitoring-solution-with-docker-grafana-and-influxdb"},"https://www.blazemeter.com/blog/how-to-create-a-lightweight-performance-monitoring-solution-with-docker-grafana-and-influxdb")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.blazemeter.com/blog/gatling-tests-monitoring-with-grafana-and-influxdb"},"https://www.blazemeter.com/blog/gatling-tests-monitoring-with-grafana-and-influxdb")),(0,o.kt)("h3",{id:"taurus-for-docker"},"Taurus for docker:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create folder name taurus"),(0,o.kt)("li",{parentName:"ul"},"Create sub folder name artifact")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker run --rm -v C:\\ccviews\\taurus:/bzt-configs -v C:\\ccviews\\taurus\\artifact:/tmp/artifacts blazemeter/taurus taurus_execution1.yml\n")))}d.isMDXComponent=!0}}]);