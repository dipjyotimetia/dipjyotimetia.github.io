"use strict";(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[3511],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",k={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),u=a,m=d["".concat(c,".").concat(u)]||d[u]||k[u]||o;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1999:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={id:"docker",title:"Docker",sidebar_label:"Docker"},i=void 0,l={unversionedId:"snippets/cloud/ci/docker",id:"snippets/cloud/ci/docker",title:"Docker",description:"Docker with jenkins is present in the jenkins",source:"@site/docs/snippets/cloud/ci/docker.md",sourceDirName:"snippets/cloud/ci",slug:"/snippets/cloud/ci/docker",permalink:"/docs/snippets/cloud/ci/docker",draft:!1,editUrl:"https://github.com/dipjyotimetia/Docs/docs/snippets/cloud/ci/docker.md",tags:[],version:"current",frontMatter:{id:"docker",title:"Docker",sidebar_label:"Docker"},sidebar:"Docs",previous:{title:"Case Studies",permalink:"/docs/snippets/cloud/google/casestudies"},next:{title:"Kubernetes",permalink:"/docs/snippets/cloud/ci/kubernetes"}},c={},s=[{value:"Build docker image with tag",id:"build-docker-image-with-tag",level:3},{value:"Docker run and stop",id:"docker-run-and-stop",level:3},{value:"Docker stop and remove all containers",id:"docker-stop-and-remove-all-containers",level:3},{value:"Docker login to container",id:"docker-login-to-container",level:3},{value:"Docker login to image",id:"docker-login-to-image",level:3},{value:"Docker login to image with entry point",id:"docker-login-to-image-with-entry-point",level:3},{value:"Docker conatainer run with priviledge",id:"docker-conatainer-run-with-priviledge",level:3},{value:"Docker containers:",id:"docker-containers",level:3},{value:"Docker images:",id:"docker-images",level:3},{value:"Starting an interactive shell",id:"starting-an-interactive-shell",level:3},{value:"Stopping and removing containers",id:"stopping-and-removing-containers",level:3},{value:"Inspecting container metadata",id:"inspecting-container-metadata",level:3},{value:"Viewing container logs",id:"viewing-container-logs",level:3},{value:"Docker and Github",id:"docker-and-github",level:2},{value:"Deploy script",id:"deploy-script",level:3},{value:"Resources",id:"resources",level:3},{value:"AWS Docker Jenkins",id:"aws-docker-jenkins",level:3}],p={toc:s};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Docker with jenkins is present in the ",(0,a.kt)("a",{parentName:"p",href:"./jenkins"},"jenkins"),"   "),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You do not have to write out the ",(0,a.kt)("inlineCode",{parentName:"p"},"CONTAINER_ID")," in full. The partial ",(0,a.kt)("inlineCode",{parentName:"p"},"CONTAINER_ID")," specified need only uniquely identify the container. Given a container 'aa151b912448' and 'aa153cd14238', ",(0,a.kt)("inlineCode",{parentName:"p"},"docker logs aa15")," will not work, but ",(0,a.kt)("inlineCode",{parentName:"p"},"docker logs aa151")," will.")),(0,a.kt)("h3",{id:"build-docker-image-with-tag"},"Build docker image with tag"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t node-app:0.1 .\n")),(0,a.kt)("h3",{id:"docker-run-and-stop"},"Docker run and stop"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 4000:80 --name my-app -d node-app:0.1\ndocker ps\n\ndocker logs [CONTAINER_ID]\n")),(0,a.kt)("h3",{id:"docker-stop-and-remove-all-containers"},"Docker stop and remove all containers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop my-app && docker rm my-app\ndocker stop $(docker ps -q)\ndocker rm $(docker ps -aq)\n")),(0,a.kt)("h3",{id:"docker-login-to-container"},"Docker login to container"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"docker exec -it <mycontainer> bash    ")),(0,a.kt)("h3",{id:"docker-login-to-image"},"Docker login to image"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"docker run -it <image> bash  ")),(0,a.kt)("h3",{id:"docker-login-to-image-with-entry-point"},"Docker login to image with entry point"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"docker run -it --entrypoint bash <image>")),(0,a.kt)("h3",{id:"docker-conatainer-run-with-priviledge"},"Docker conatainer run with priviledge"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"--privileged")),(0,a.kt)("h3",{id:"docker-containers"},"Docker containers:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker container ls\n# List all containers\ndocker ps\n# Docker container already exited\ndocker ps -a \n")),(0,a.kt)("h3",{id:"docker-images"},"Docker images:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"docker images")),(0,a.kt)("h3",{id:"starting-an-interactive-shell"},"Starting an interactive shell"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it [CONTAINER_ID] bash\n")),(0,a.kt)("h3",{id:"stopping-and-removing-containers"},"Stopping and removing containers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop $(docker ps -q)\ndocker rm $(docker ps -aq)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"docker ps")," options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-q"),": Only display numeric IDs"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-a"),": Show all containers (default shows just running)")),(0,a.kt)("h3",{id:"inspecting-container-metadata"},"Inspecting container metadata"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker inspect [CONTAINER_ID]\n\ndocker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' [CONTAINER_ID]\n")),(0,a.kt)("h3",{id:"viewing-container-logs"},"Viewing container logs"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Typical command:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker logs [CONTAINER_ID]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Follow log output for a specified duration:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker logs -f --until=[TIME]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Docker compose logs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose logs --no-color --tail=1000 [service_name] > logs.txt\n")),(0,a.kt)("p",null,"TIME can be a TIMESTAMP or relative (e.g. '10m' or '5s')"),(0,a.kt)("h2",{id:"docker-and-github"},"Docker and Github"),(0,a.kt)("h3",{id:"deploy-script"},"Deploy script"),(0,a.kt)("p",null,"This script assumes that the working directory contains a ",(0,a.kt)("inlineCode",{parentName:"p"},".git")," directory, ",(0,a.kt)("inlineCode",{parentName:"p"},"Dockerfile")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),". A ",(0,a.kt)("inlineCode",{parentName:"p"},".gitignore")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},".dockerignore")," file may be useful too. It is also assumed that the project dependencies have been installed using ",(0,a.kt)("inlineCode",{parentName:"p"},"npm install"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"deploy.sh")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'IMAGE_NAME=""\nVERSION="" # Can be left blank\nCONTAINER_NAME=""\nCONTAINER_PORT="" # To be mapped to HOST_PORT\nHOST_PORT="" # The port clients will access\n\ndocker stop $CONTAINER_NAME # Stop the running container\ndocker system prune -af # Removes the container and all unused images\ngit pull origin master # Pulls latest source files and image\ndocker build -t $IMAGE_NAME .\ndocker run --name $CONTAINER_NAME -p $CONTAINER_PORT:$HOST_PORT -d $IMAGE_NAME:$VERSION\n')),(0,a.kt)("p",null,"Before the script can be used, replace the following placeholders:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IMAGE_NAME")," : The name of your image."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"VERSION")," : The version of your image. Can be left blank."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CONTAINER_NAME")," : The desired name of your container."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"CONTAINER_PORT")," : The port of your container which your application is running on."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"HOST_PORT")," : The host port your container port will be mapped to. This is the port that is exposed on the host system.")),(0,a.kt)("h3",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://realestate-com-au.github.io/intro-to-docker/#1"},"Docker get Started")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/how-to-build-a-node-js-application-with-docker#step-4-%E2%80%94-using-a-repository-to-work-with-images"},"How To Build a Node.js Application with Docker")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/reference/commandline/logs/"},"docker logs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.docker.com/engine/reference/commandline/ps/"},"docker ps")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://qxf2.com/blog/view-docker-container-display-using-vnc-viewer/"},"Docker VNC"))),(0,a.kt)("h3",{id:"aws-docker-jenkins"},"AWS Docker Jenkins"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install java-1.8.0 -y\nsudo yum remove java-1.7.0-openjdk -y\n\nUpdate the packages on your instance\n\n[ec2-user ~]$ sudo yum update -y\n\nInstall Docker\n\n[ec2-user ~]$ sudo yum install docker -y\n\nStart the Docker Service\n\n[ec2-user ~]$ sudo service docker start\n\nAdd the ec2-user to the docker group so you can execute Docker commands without using sudo.\n\n[ec2-user ~]$ sudo usermod -a -G docker ec2-user\n")))}d.isMDXComponent=!0}}]);