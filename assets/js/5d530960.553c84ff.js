(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[3067],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),d=n,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return r?a.createElement(f,o(o({ref:t},u),{},{components:r})):a.createElement(f,o({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2397:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var a=r(2122),n=r(9756),i=(r(7294),r(3905)),o={id:"mobiletestframework",title:"Mobile Test Framework",sidebar_label:"Mobile Test Framework",description:"Mobile, API testing framework using appium and rest-assured",keywords:["appium","testing","api","rest-assured"],image:"../../static/img/projects/FrameworkArchitecture.png"},l=void 0,s={unversionedId:"projects/mobiletestframework",id:"projects/mobiletestframework",isDocsHomePage:!1,title:"Mobile Test Framework",description:"Mobile, API testing framework using appium and rest-assured",source:"@site/docs/projects/mobiletestframework.md",sourceDirName:"projects",slug:"/projects/mobiletestframework",permalink:"/docs/projects/mobiletestframework",editUrl:"https://github.com/dipjyotimetia/Docs/docs/projects/mobiletestframework.md",tags:[],version:"current",frontMatter:{id:"mobiletestframework",title:"Mobile Test Framework",sidebar_label:"Mobile Test Framework",description:"Mobile, API testing framework using appium and rest-assured",keywords:["appium","testing","api","rest-assured"],image:"../../static/img/projects/FrameworkArchitecture.png"},sidebar:"sidebar",previous:{title:"Hybrid Test Framework",permalink:"/docs/"},next:{title:"Cypress Test Framework",permalink:"/docs/projects/cypress"}},p=[{value:"Supported Platforms",id:"supported-platforms",children:[]},{value:"Why Appium?",id:"why-appium",children:[]},{value:"Setup &amp; Tools",id:"setup--tools",children:[]},{value:"Connect - Local Devices:",id:"connect---local-devices",children:[]},{value:"Getting Started",id:"getting-started",children:[]},{value:"Write your first user journey",id:"write-your-first-user-journey",children:[]}],u={toc:p};function m(e){var t=e.components,o=(0,n.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"full-fledged-mobile-api-and-database-framework-using-appium-and-rest-assured"},"Full fledged Mobile, API and Database framework using appium and rest-assured"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/dipjyotimetia/MobileTestFramework/workflows/CI/badge.svg",alt:"CI"}),"   "),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"img",src:r(6964).Z}),"   "),(0,i.kt)("h3",{id:"supported-platforms"},"Supported Platforms"),(0,i.kt)("p",null,'Appium supports app automation across a variety of platforms, like iOS,Android, from Windows platform. Each platform is supported by one or more "drivers",\nwhich know how to automate that particular platform. Choose a driver below for specific information about how that driver works and how to set it up:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Android",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("a",{parentName:"li",href:"http://appium.io/docs/en/drivers/android-uiautomator2/"},"UiAutomator2 Driver")))),(0,i.kt)("li",{parentName:"ul"},"IOS",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("a",{parentName:"li",href:"http://appium.io/docs/en/drivers/ios-xcuitest/"},"XCUITest"),"  ")))),(0,i.kt)("h3",{id:"why-appium"},(0,i.kt)("a",{parentName:"h3",href:"http://appium.io/docs/en/about-appium/intro/"},"Why Appium"),"?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Appium is an Open source automation tool used for cross platform testing like native, hybrid and web applications  on both the platforms IOS and Android.\nIts capability for testing all kinds of tools under one platform, makes it a multipurpose and convenient testing tool. Appium is called as a cross platform\ntesting tool because it uses JSON wire protocol internally to interact with native apps of IOS and Android using Selenium Webdriver.")),(0,i.kt)("h3",{id:"setup--tools"},"Setup & Tools"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Download and install ",(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Nodejs"),(0,i.kt)("br",{parentName:"li"}),"",(0,i.kt)("inlineCode",{parentName:"li"},"  npm install -g appium\n "),(0,i.kt)("br",{parentName:"li"}),"",(0,i.kt)("inlineCode",{parentName:"li"},"  npm install -g appium-doctor\n "),"\nverify all appium dependencies  "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/appium/appium-desktop/releases"},"Download Appium Desktop")," download latest release"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.jetbrains.com/idea/download/"},"Install InteliJ IDEA")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/corretto/latest/corretto-8-ug/downloads-list.html"},"Java JDK_8")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gradle.org/next-steps/?version=6.7.1&format=bin"},"Gradle")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/allure-framework/allure2/archive/2.13.8.zip"},"Allure")),(0,i.kt)("li",{parentName:"ul"},"Set Environment variables")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  * JAVA_HOME: Pointing to the Java SDK folder\\bin\n  * GRADLE_HOME: Pointing to Gradle directory\\bin\n  * ALLURE_HOME: Pointing to allure directory\\bin\n  * APPIUM_HOME: Pointing appium main.js from global location\n  * NODE_HOME: Pointing to nodejs installation path\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For more details navigate to the above ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/dipjyotimetia/MobileTestFramework/wiki"},"Wiki Page"))),(0,i.kt)("h3",{id:"connect---local-devices"},"Connect - Local Devices:"),(0,i.kt)("p",null,"Connect an Android and an iOS Device using a USB cable to your PC"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Follow documentation for device connection")),(0,i.kt)("h3",{id:"getting-started"},"Getting Started"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone \n$ cd \n$ import project from InteliJ as a gradle project\n$ gradle clean\n$ gradle build\n$ gradle task E2E\n$ allureServe\n")),(0,i.kt)("h3",{id:"write-your-first-user-journey"},"Write your first user journey"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create new class and name as the ",(0,i.kt)("inlineCode",{parentName:"li"},"TC00*_E2E_TEST-***")),(0,i.kt)("li",{parentName:"ul"},"Provide jira link in ",(0,i.kt)("inlineCode",{parentName:"li"},"@Link")),(0,i.kt)("li",{parentName:"ul"},"Provide all the api components as ",(0,i.kt)("inlineCode",{parentName:"li"},"@Feature")),(0,i.kt)("li",{parentName:"ul"},"Provide test severity and description"),(0,i.kt)("li",{parentName:"ul"},"Write test"),(0,i.kt)("li",{parentName:"ul"},"Use CatchBlock in ",(0,i.kt)("inlineCode",{parentName:"li"},"try/catch")," section")))}m.isMDXComponent=!0},6964:function(e,t,r){"use strict";t.Z=r.p+"assets/images/FrameworkArchitecture-69dec97d03bcd0e44f70cd6e19fcb356.png"}}]);