(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[650],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),c=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),f=i,m=d["".concat(a,".").concat(f)]||d[f]||u[f]||l;return t?r.createElement(m,s(s({ref:n},p),{},{components:t})):r.createElement(m,s({ref:n},p))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,s=new Array(l);s[0]=d;var o={};for(var a in n)hasOwnProperty.call(n,a)&&(o[a]=n[a]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<l;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7570:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return a},toc:function(){return c},default:function(){return u}});var r=t(2122),i=t(9756),l=(t(7294),t(3905)),s={id:"jenkins",title:"Jenkins",sidebar_label:"Jenkins"},o=void 0,a={unversionedId:"snippets/cloud/ci/jenkins",id:"snippets/cloud/ci/jenkins",isDocsHomePage:!1,title:"Jenkins",description:"To Allow html css in html publisher",source:"@site/docs/snippets/cloud/ci/jenkins.md",sourceDirName:"snippets/cloud/ci",slug:"/snippets/cloud/ci/jenkins",permalink:"/docs/snippets/cloud/ci/jenkins",editUrl:"https://github.com/dipjyotimetia/Docs/docs/snippets/cloud/ci/jenkins.md",tags:[],version:"current",frontMatter:{id:"jenkins",title:"Jenkins",sidebar_label:"Jenkins"},sidebar:"Docs",previous:{title:"Docker",permalink:"/docs/snippets/cloud/ci/docker"},next:{title:"Get Started",permalink:"/docs/snippets/security/sec1"}},c=[{value:"To Allow html css in html publisher",id:"to-allow-html-css-in-html-publisher",children:[]},{value:"Running different dockerfile in jenkins pipeline in different dir",id:"running-different-dockerfile-in-jenkins-pipeline-in-different-dir",children:[]},{value:"Demo jenkisnfile for multibranch javascript",id:"demo-jenkisnfile-for-multibranch-javascript",children:[]},{value:"Emailable Report",id:"emailable-report",children:[]}],p={toc:c};function u(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"to-allow-html-css-in-html-publisher"},"To Allow html css in html publisher"),(0,l.kt)("p",null,"Go to jenkins script console and run the below command  "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"System.setProperty(\"hudson.model.DirectoryBrowserSupport.CSP\", \"sandbox allow-same-origin allow-scripts; default-src 'self'; script-src * 'unsafe-eval'; img-src *; style-src * 'unsafe-inline'; font-src *\")\n")),(0,l.kt)("p",null,"or   "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"System.setProperty(\"hudson.model.DirectoryBrowserSupport.CSP\", \"sandbox allow-scripts; default-src 'self'; img-src *; style-src 'self' 'unsafe-inline'; script-src * 'unsafe-inline';\")\n")),(0,l.kt)("h3",{id:"running-different-dockerfile-in-jenkins-pipeline-in-different-dir"},"Running different dockerfile in jenkins pipeline in different dir"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},"pipeline {\n   agent none\n   stages {\n       stage(\"Only Dockerfile in Project\") {\n         agent { dockerfile true }\n          steps {\n         sh 'npm start'\n          }\n    }\n        stage(\"Docker file under build folder\") {\n         agent {\n        dockerfile {\n            dir 'build'\n          }\n          }\n          steps {\n         sh 'npm start'\n          }\n    }\n    stage(\"Docker file for test under Tests folder\") {\n         agent {\n        dockerfile {\n            dir 'E2ETests'\n          }\n          }\n          steps {\n         sh 'npm test'\n          }\n    }\n   }\n}   \n")),(0,l.kt)("h3",{id:"demo-jenkisnfile-for-multibranch-javascript"},"Demo jenkisnfile for multibranch javascript"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-groovy"},"def buildVersion = ''\n\npipeline {\n  agent  { label 'win' }\n    triggers { cron('15 09 * * *') }\n\n    parameters {\n        string(name: 'exec_config', defaultValue: 'ENV', description: 'Default execution environment is ENV headless')\n    }\n\n    options {\n            buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))\n        }\n\n    stages {\n     stage(\"Test ENV\") {\n            steps {\n                echo 'run tests'\n                sh 'npm run test:headless'\n                echo \"${params.exec_config}\"\n                sh \"npm run test:e2e:${params.exec_config}\"\n            }\n        }\n\n    }\n    post {\n        always {\n              allure includeProperties: false, jdk: '', results: [[path: 'allure-xml-results']]\n              publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'allure-report', reportFiles: 'index.html', reportName: 'Allure Report', reportTitles: ''])\n        }\n    }\n")),(0,l.kt)("h3",{id:"emailable-report"},"Emailable Report"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'Hi All,\n<br/>\nPlease find the execution detail and buildlog in attachment.\n<br/>\nReport url: /<br/>\n<br/>\n<pre>\n${FILE, path="build/testngOutput/emailable-report.html"}\n</pre>\n')),(0,l.kt)("p",null,"Attachments: Reports/*.html"))}u.isMDXComponent=!0}}]);