"use strict";(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[6885],{4175:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=t(5893),i=t(1151);const r={slug:"function",title:"function",author:"Dipjyoti Metia",author_title:"Lead Software Engineer",author_url:"https://github.com/dipjyotimetia",author_image_url:"https://avatars3.githubusercontent.com/u/18288720?s=400&u=168a31a123ff5c1c44afc29a579f91d13813da54&v=4",tags:["cloud function","tech","golang","serverless"],description:"This blog talked about serverless mocking using cloud function",image:"../static/img/blog/cloudfunctions.png",hide_table_of_contents:!1},s=void 0,a={permalink:"/blog/function",editUrl:"https://github.com/dipjyotimetia/blog/blog/blog/2021-07-30-functions.mdx",source:"@site/blog/2021-07-30-functions.mdx",title:"function",description:"This blog talked about serverless mocking using cloud function",date:"2021-07-30T00:00:00.000Z",tags:[{label:"cloud function",permalink:"/blog/tags/cloud-function"},{label:"tech",permalink:"/blog/tags/tech"},{label:"golang",permalink:"/blog/tags/golang"},{label:"serverless",permalink:"/blog/tags/serverless"}],readingTime:3.27,hasTruncateMarker:!1,authors:[{name:"Dipjyoti Metia",title:"Lead Software Engineer",url:"https://github.com/dipjyotimetia",imageURL:"https://avatars3.githubusercontent.com/u/18288720?s=400&u=168a31a123ff5c1c44afc29a579f91d13813da54&v=4"}],frontMatter:{slug:"function",title:"function",author:"Dipjyoti Metia",author_title:"Lead Software Engineer",author_url:"https://github.com/dipjyotimetia",author_image_url:"https://avatars3.githubusercontent.com/u/18288720?s=400&u=168a31a123ff5c1c44afc29a579f91d13813da54&v=4",tags:["cloud function","tech","golang","serverless"],description:"This blog talked about serverless mocking using cloud function",image:"../static/img/blog/cloudfunctions.png",hide_table_of_contents:!1},unlisted:!1,nextItem:{title:"Kafka",permalink:"/blog/kafka"}},c={authorsImageUrls:[void 0]},l=[{value:"What is serverless",id:"what-is-serverless",level:2},{value:"Introduction to cloud functions",id:"introduction-to-cloud-functions",level:2},{value:"Functions Framework",id:"functions-framework",level:2},{value:"Deploy cloud function",id:"deploy-cloud-function",level:3},{value:"Why Mocking using cloud function",id:"why-mocking-using-cloud-function",level:2},{value:"Use cases of mocking using cloud function",id:"use-cases-of-mocking-using-cloud-function",level:2},{value:"System Testing",id:"system-testing",level:3},{value:"Performance testing",id:"performance-testing",level:3}];function u(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"what-is-serverless",children:"What is serverless"}),"\n",(0,o.jsx)(e.p,{children:"Serverless computing is a method of providing backend services on an as-used basis. A serverless provider allows users to write and deploy code without the hassle of worrying about the underlying infrastructure. code executes in a fully managed environment and no need to provision any infrastructure."}),"\n",(0,o.jsx)(e.h2,{id:"introduction-to-cloud-functions",children:"Introduction to cloud functions"}),"\n",(0,o.jsx)(e.p,{children:"Google Cloud Functions is a serverless execution environment for building and connecting cloud services. With Cloud Functions you write simple, single-purpose functions that are attached to events emitted from your cloud infrastructure and services. Your Cloud Function is triggered when an event being watched is fired. Your code executes in a fully managed environment. There is no need to provision any infrastructure or worry about managing any servers."}),"\n",(0,o.jsx)(e.h2,{id:"functions-framework",children:"Functions Framework"}),"\n",(0,o.jsxs)(e.p,{children:["The Functions Framework lets you write lightweight functions that run in many different environments. ",(0,o.jsx)(e.a,{href:"https://github.com/GoogleCloudPlatform/functions-framework",children:"Functions framework"})]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package main\n\nimport (\n "github.com/GoogleCloudPlatform/functions-framework-go/funcframework"\n p "github.com/cloudmock"\n "golang.org/x/net/context"\n "log"\n "os"\n)\n\nfunc main() {\n ctx := context.Background()\n if err := funcframework.RegisterHTTPFunctionContext(ctx, "/", p.GoMock); err != nil {\n  log.Fatalf("funcframework.RegisterHTTPFunctionContext: %v\\n", err)\n }\n port := "8080"\n if envPort := os.Getenv("PORT"); envPort != "" {\n  port = envPort\n }\n if err := funcframework.Start(port); err != nil {\n  log.Fatalf("funcframework.Start: %v\\n", err)\n }\n}\n\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package db\n\nimport (\n "context"\n "fmt"\n "log"\n "os"\n "time"\n\n "github.com/cloudmock/config"\n "github.com/cloudmock/secret"\n "go.mongodb.org/mongo-driver/mongo"\n "go.mongodb.org/mongo-driver/mongo/options"\n)\n\nconst ENV = "ENVIRONMENT"\n\nfunc NewDatabaseConnection() *mongo.Collection {\n var err error\n log.Print("Connecting to mongodb")\n conf, err := config.LoadConfigPath("config/app")\n if err != nil {\n  log.Fatalf("")\n }\n env := os.Getenv(ENV)\n var client *mongo.Client\n\n conn, err := secret.GetSecrets()\n if err != nil {\n  log.Fatalf("mongo db secret url failed %v", err)\n }\n if env == "dev" {\n  fmt.Println("Connecting to localdb")\n  client, err = mongo.NewClient(options.Client().SetAuth(\n   options.Credential{\n    Username: conf.DBuser,\n    Password: conf.DBpassword,\n   }).ApplyURI(conf.DBurl))\n } else {\n  client, err = mongo.NewClient(options.Client().ApplyURI(conn))\n }\n\n if err != nil {\n  log.Fatalf("mongo db client failed %v", err)\n }\n ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)\n defer cancel()\n err = client.Connect(ctx)\n if err != nil {\n  log.Fatalf("mongo db connection failed %s", err) //nolint:gocritic\n }\n return client.Database("function").Collection("payments")\n}\n\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package router\n\nimport (\n "encoding/json"\n "github.com/brianvoe/gofakeit/v6"\n "net/http"\n)\n\ntype UserDetails struct {\n Name     string `json:"name"`\n Email    string `json:"email"`\n Phone    string `json:"phone"`\n Address  string `json:"address"`\n Company  string `json:"company"`\n JobTitle string `json:"jobTitle"`\n}\n\nfunc NewUserWrite() *[]UserDetails {\n var usr []UserDetails\n for i := 0; i < gofakeit.RandomInt([]int{5, 10, 12, 4, 11}); i++ {\n  usr = append(usr, UserDetails{\n   Name:     gofakeit.Name(),\n   Email:    gofakeit.Email(),\n   Phone:    gofakeit.Phone(),\n   Address:  gofakeit.Address().Address,\n   Company:  gofakeit.Company(),\n   JobTitle: gofakeit.JobTitle(),\n  })\n }\n return &usr\n}\n\nfunc User() func(w http.ResponseWriter, r *http.Request) {\n return func(w http.ResponseWriter, r *http.Request) {\n  w.Header().Set("Content-Type", "application/json")\n  jData, err := json.Marshal(NewUserWrite())\n  if err != nil {\n   http.Error(w, err.Error(), http.StatusInternalServerError)\n   return\n  }\n  w.WriteHeader(http.StatusOK)\n  w.Write(jData)\n }\n}\n\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'package p\n\nimport (\n "github.com/cloudmock/router"\n "github.com/go-chi/chi/v5"\n "github.com/go-chi/chi/v5/middleware"\n "github.com/go-chi/httprate"\n "github.com/rs/cors"\n "net/http"\n "time"\n)\n\nfunc GoMock(w http.ResponseWriter, r *http.Request) {\n rc := chi.NewRouter()\n conn := db.NewDatabaseConnection()\n\n rc.Use(middleware.RealIP)\n rc.Use(middleware.Logger)\n rc.Use(httprate.Limit(\n  2,\n  1*time.Second,\n  httprate.WithLimitHandler(func(w http.ResponseWriter, r *http.Request) {\n   http.Error(w, "too many requests", http.StatusTooManyRequests)\n  }),\n ))\n\n rc.Route("/api/v1", func(rc chi.Router) {\n  rc.Get("/users", router.User())\n  rc.Get("/categories", router.Category())\n })\n\n cors.Default().Handler(rc).ServeHTTP(w, r)\n}\n\n'})}),"\n",(0,o.jsx)(e.h3,{id:"deploy-cloud-function",children:"Deploy cloud function"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",children:'name: Build and Deploy to CloudFunction\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  deploy:\n    name: deploy\n    runs-on: ubuntu-latest\n    steps:\n      - uses: google-github-actions/setup-gcloud@master\n        with:\n          project_id: ${{ secrets.GCP_PROJECT_ID }}\n          service_account_key: ${{ secrets.gcp_credentials }}\n          export_default_credentials: true\n      - uses: actions/checkout@v2\n      - name: Deploy serverless function\n        run: |\n          gcloud functions deploy "GoMock" \\\n            --runtime go113 --trigger-http \\\n            --allow-unauthenticated \\\n            --region australia-southeast1 \\\n            --update-env-vars MONGODB=${{ secrets.mongo_secret }} \\\n            --max-instances 2 \\\n            --memory 128mb \\\n            --service-account=${{ secrets.service_account }} \\\n            --no-user-output-enabled\n'})}),"\n",(0,o.jsx)(e.h2,{id:"why-mocking-using-cloud-function",children:"Why Mocking using cloud function"}),"\n",(0,o.jsx)(e.h2,{id:"use-cases-of-mocking-using-cloud-function",children:"Use cases of mocking using cloud function"}),"\n",(0,o.jsx)(e.h3,{id:"system-testing",children:"System Testing"}),"\n",(0,o.jsx)(e.h3,{id:"performance-testing",children:"Performance testing"}),"\n",(0,o.jsx)(e.p,{children:"Performance tests check the behaviors of the system when it is under significant load. These tests are non-functional and can have the various form to understand the reliability, stability, and availability of the platform. For instance, it can be observing response times when executing a high number of requests, or seeing how the system behaves with a significant of data."}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.img,{alt:"img.png",src:t(9593).Z+"",width:"1823",height:"857"}),"\n",(0,o.jsx)(e.img,{alt:"img.png",src:t(1754).Z+"",width:"1833",height:"417"})]})]})}function g(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(u,{...n})}):u(n)}},9593:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/K6Result-25acebe39961c7920c7dbca40e2e33e8.png"},1754:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/function-9fb2556cd7f83454557403a8a7a0ffa7.png"},1151:(n,e,t)=>{t.d(e,{Z:()=>a,a:()=>s});var o=t(7294);const i={},r=o.createContext(i);function s(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),o.createElement(r.Provider,{value:e},n.children)}}}]);