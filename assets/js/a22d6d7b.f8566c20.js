"use strict";(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[1132],{4796:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>l});var o=i(5893),r=i(1151);const c={id:"docker",title:"Docker",sidebar_label:"Docker"},s=void 0,d={id:"snippets/cloud/ci/docker",title:"Docker",description:"Docker with jenkins is present in the jenkins",source:"@site/docs/snippets/cloud/ci/docker.mdx",sourceDirName:"snippets/cloud/ci",slug:"/snippets/cloud/ci/docker",permalink:"/docs/snippets/cloud/ci/docker",draft:!1,unlisted:!1,editUrl:"https://github.com/dipjyotimetia/Docs/docs/snippets/cloud/ci/docker.mdx",tags:[],version:"current",frontMatter:{id:"docker",title:"Docker",sidebar_label:"Docker"},sidebar:"Docs",previous:{title:"Case Studies",permalink:"/docs/snippets/cloud/google/casestudies"},next:{title:"Kubernetes",permalink:"/docs/snippets/cloud/ci/kubernetes"}},t={},l=[{value:"Build docker image with tag",id:"build-docker-image-with-tag",level:3},{value:"Docker run and stop",id:"docker-run-and-stop",level:3},{value:"Docker stop and remove all containers",id:"docker-stop-and-remove-all-containers",level:3},{value:"Docker login to container",id:"docker-login-to-container",level:3},{value:"Docker login to image",id:"docker-login-to-image",level:3},{value:"Docker login to image with entry point",id:"docker-login-to-image-with-entry-point",level:3},{value:"Docker conatainer run with priviledge",id:"docker-conatainer-run-with-priviledge",level:3},{value:"Docker containers:",id:"docker-containers",level:3},{value:"Docker images:",id:"docker-images",level:3},{value:"Starting an interactive shell",id:"starting-an-interactive-shell",level:3},{value:"Stopping and removing containers",id:"stopping-and-removing-containers",level:3},{value:"Inspecting container metadata",id:"inspecting-container-metadata",level:3},{value:"Viewing container logs",id:"viewing-container-logs",level:3},{value:"Docker and Github",id:"docker-and-github",level:2},{value:"Deploy script",id:"deploy-script",level:3},{value:"Resources",id:"resources",level:3},{value:"AWS Docker Jenkins",id:"aws-docker-jenkins",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Docker with jenkins is present in the ",(0,o.jsx)(n.a,{href:"./jenkins",children:"jenkins"})]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["You do not have to write out the ",(0,o.jsx)(n.code,{children:"CONTAINER_ID"})," in full. The partial ",(0,o.jsx)(n.code,{children:"CONTAINER_ID"})," specified need only uniquely identify the container. Given a container 'aa151b912448' and 'aa153cd14238', ",(0,o.jsx)(n.code,{children:"docker logs aa15"})," will not work, but ",(0,o.jsx)(n.code,{children:"docker logs aa151"})," will."]})}),"\n",(0,o.jsx)(n.h3,{id:"build-docker-image-with-tag",children:"Build docker image with tag"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker build -t node-app:0.1 .\n"})}),"\n",(0,o.jsx)(n.h3,{id:"docker-run-and-stop",children:"Docker run and stop"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run -p 4000:80 --name my-app -d node-app:0.1\ndocker ps\n\ndocker logs [CONTAINER_ID]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"docker-stop-and-remove-all-containers",children:"Docker stop and remove all containers"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker stop my-app && docker rm my-app\ndocker stop $(docker ps -q)\ndocker rm $(docker ps -aq)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"docker-login-to-container",children:"Docker login to container"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"docker exec -it <mycontainer> bash    "})}),"\n",(0,o.jsx)(n.h3,{id:"docker-login-to-image",children:"Docker login to image"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"docker run -it <image> bash  "})}),"\n",(0,o.jsx)(n.h3,{id:"docker-login-to-image-with-entry-point",children:"Docker login to image with entry point"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"docker run -it --entrypoint bash <image>"})}),"\n",(0,o.jsx)(n.h3,{id:"docker-conatainer-run-with-priviledge",children:"Docker conatainer run with priviledge"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"--privileged"})}),"\n",(0,o.jsx)(n.h3,{id:"docker-containers",children:"Docker containers:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker container ls\n# List all containers\ndocker ps\n# Docker container already exited\ndocker ps -a \n"})}),"\n",(0,o.jsx)(n.h3,{id:"docker-images",children:"Docker images:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"docker images"})}),"\n",(0,o.jsx)(n.h3,{id:"starting-an-interactive-shell",children:"Starting an interactive shell"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec -it [CONTAINER_ID] bash\n"})}),"\n",(0,o.jsx)(n.h3,{id:"stopping-and-removing-containers",children:"Stopping and removing containers"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker stop $(docker ps -q)\ndocker rm $(docker ps -aq)\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"docker ps"})," options:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"-q"}),": Only display numeric IDs"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"-a"}),": Show all containers (default shows just running)"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"inspecting-container-metadata",children:"Inspecting container metadata"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker inspect [CONTAINER_ID]\n\ndocker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' [CONTAINER_ID]\n"})}),"\n",(0,o.jsx)(n.h3,{id:"viewing-container-logs",children:"Viewing container logs"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Typical command:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker logs [CONTAINER_ID]\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Follow log output for a specified duration:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker logs -f --until=[TIME]\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Docker compose logs"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker-compose logs --no-color --tail=1000 [service_name] > logs.txt\n"})}),"\n",(0,o.jsx)(n.p,{children:"TIME can be a TIMESTAMP or relative (e.g. '10m' or '5s')"}),"\n",(0,o.jsx)(n.h2,{id:"docker-and-github",children:"Docker and Github"}),"\n",(0,o.jsx)(n.h3,{id:"deploy-script",children:"Deploy script"}),"\n",(0,o.jsxs)(n.p,{children:["This script assumes that the working directory contains a ",(0,o.jsx)(n.code,{children:".git"})," directory, ",(0,o.jsx)(n.code,{children:"Dockerfile"})," and ",(0,o.jsx)(n.code,{children:"package.json"}),". A ",(0,o.jsx)(n.code,{children:".gitignore"})," and a ",(0,o.jsx)(n.code,{children:".dockerignore"})," file may be useful too. It is also assumed that the project dependencies have been installed using ",(0,o.jsx)(n.code,{children:"npm install"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"deploy.sh"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'IMAGE_NAME=""\nVERSION="" # Can be left blank\nCONTAINER_NAME=""\nCONTAINER_PORT="" # To be mapped to HOST_PORT\nHOST_PORT="" # The port clients will access\n\ndocker stop $CONTAINER_NAME # Stop the running container\ndocker system prune -af # Removes the container and all unused images\ngit pull origin master # Pulls latest source files and image\ndocker build -t $IMAGE_NAME .\ndocker run --name $CONTAINER_NAME -p $CONTAINER_PORT:$HOST_PORT -d $IMAGE_NAME:$VERSION\n'})}),"\n",(0,o.jsx)(n.p,{children:"Before the script can be used, replace the following placeholders:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"IMAGE_NAME"})," : The name of your image."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"VERSION"})," : The version of your image. Can be left blank."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CONTAINER_NAME"})," : The desired name of your container."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CONTAINER_PORT"})," : The port of your container which your application is running on."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"HOST_PORT"})," : The host port your container port will be mapped to. This is the port that is exposed on the host system."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"resources",children:"Resources"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://realestate-com-au.github.io/intro-to-docker/#1",children:"Docker get Started"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.digitalocean.com/community/tutorials/how-to-build-a-node-js-application-with-docker#step-4-%E2%80%94-using-a-repository-to-work-with-images",children:"How To Build a Node.js Application with Docker"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/commandline/logs/",children:"docker logs"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/commandline/ps/",children:"docker ps"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://qxf2.com/blog/view-docker-container-display-using-vnc-viewer/",children:"Docker VNC"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"aws-docker-jenkins",children:"AWS Docker Jenkins"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo yum install java-1.8.0 -y\nsudo yum remove java-1.7.0-openjdk -y\n\nUpdate the packages on your instance\n\n[ec2-user ~]$ sudo yum update -y\n\nInstall Docker\n\n[ec2-user ~]$ sudo yum install docker -y\n\nStart the Docker Service\n\n[ec2-user ~]$ sudo service docker start\n\nAdd the ec2-user to the docker group so you can execute Docker commands without using sudo.\n\n[ec2-user ~]$ sudo usermod -a -G docker ec2-user\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>s});var o=i(7294);const r={},c=o.createContext(r);function s(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);