"use strict";(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[4141],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),f=o,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||a;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9693:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),s=["components"],i={id:"testcafe",title:"Testcafe Test Framework"},l=void 0,c={unversionedId:"projects/testcafe",id:"projects/testcafe",title:"Testcafe Test Framework",description:"TestCafeCI",source:"@site/docs/projects/testcafe.md",sourceDirName:"projects",slug:"/projects/testcafe",permalink:"/docs/projects/testcafe",draft:!1,editUrl:"https://github.com/dipjyotimetia/Docs/docs/projects/testcafe.md",tags:[],version:"current",frontMatter:{id:"testcafe",title:"Testcafe Test Framework"},sidebar:"sidebar",previous:{title:"Cypress Test Framework",permalink:"/docs/projects/cypress"},next:{title:"Api Test Framework",permalink:"/docs/projects/apitestautomation"}},p={},u=[{value:"Installation:",id:"installation",level:3},{value:"Project Setup:",id:"project-setup",level:3},{value:"Write Code:",id:"write-code",level:3},{value:"Test:",id:"test",level:3},{value:"Configurations",id:"configurations",level:3},{value:"Full Configurations",id:"full-configurations",level:3}],m={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://github.com/TestautoDev/TestCafeTestFramework/workflows/TestCafeCI/badge.svg",alt:"TestCafeCI"}),"  "),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/DevExpress/testcafe-gh-page-assets/master/src/images/testcafe-ogp-icon.png",alt:"img"})),(0,a.kt)("h3",{id:"installation"},"Installation:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"nodejs 14.5.1 lts")),(0,a.kt)("li",{parentName:"ul"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/download"},"VS_Code"))),(0,a.kt)("h3",{id:"project-setup"},"Project Setup:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone repo https://github.com/dipjyotimetia/TestCafeTestFramework.git\n$ npm install\n")),(0,a.kt)("h3",{id:"write-code"},"Write Code:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add new spec file with the format ",(0,a.kt)("inlineCode",{parentName:"li"},"TC00*\\_SampleTest*\\_spec.ts"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Selector } from \"testcafe\";\nimport * as selector from \"../src/selectors/index\";\nimport * as pages from \"../src/pageObjects/index\";\n\nfixture('Test TodoMVC App')\n    .page('http://todomvc.com/examples/vanillajs/')\n\ntest.skip('Create todo', async t => {\n    await t\n        .maximizeWindow()\n        .typeText(selector.input, 'write blog post about JS')\n        .pressKey('enter')\n\n    await t\n        .maximizeWindow()\n        .expect(selector.todoItems.count)\n        .eql(1)\n\n    await t\n        .maximizeWindow()\n        .expect(selector.firstTodoItem.textContent)\n        .contains('write blog post about JS')\n})\n")),(0,a.kt)("h3",{id:"test"},"Test:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"test:chrome")," run tests in chrome browser")),(0,a.kt)("h3",{id:"configurations"},"Configurations"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="runner.config.ts"',title:'"runner.config.ts"'},".filter((testName, fixtureName, fixturePath, testMeta, fixtureMeta) => {\n    return fixturePath.startsWith('D') &&\n        testName.match(someRe) &&\n        fixtureName.match(anotherRe) &&\n        testMeta.mobile === 'true' &&\n        fixtureMeta.env === 'staging';\n});\n\n.browsers(['chrome', 'firefox'])\n.browsers('chrome:headless')\n.browsers('chrome:headless --no-sandbox --disable-gpu')\n.concurrency(3);\n\n.screenshots({\n    path: 'reports/screenshots/',\n    takeOnFails: true,\n    pathPattern: '${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png'\n});\n\n.video('reports/videos/', {\n    singleFile: true,\n    failedOnly: true,\n    pathPattern: '${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.mp4'\n}, {\n    r: 20,\n    aspect: '4:3'\n});\n\n")),(0,a.kt)("h3",{id:"full-configurations"},"Full Configurations"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".testcaferc.json"',title:'".testcaferc.json"'},'{\n    "browsers": ["chrome","edge", "firefox"],\n    "reporter": {\n        "name": "xunit",\n        "output": "reports/report.xml"\n    },\n    "screenshots": {\n        "takeOnFails": true,\n        "fullPage": true,\n        "path": "screenshot",\n        "pathPattern": "${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png"\n    },\n    "videoOptions": {\n        "singleFile": true,\n        "failedOnly": true,\n        "pathPattern": "${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.mp4"\n    },\n    "debugMode": true,\n    "debugOnFail": true,\n    "skipJsErrors": true,\n    "skipUncaughtErrors": true,\n    "filter": {\n        "test": "Click a label",\n        "testGrep": "Click.*",\n        "fixture": "Sample fixture",\n        "fixtureGrep": "Page.*",\n        "testMeta": {\n            "device": "mobile",\n            "env": "production"\n        },\n        "fixtureMeta": {\n            "device": "mobile",\n            "env": "production"\n        }\n    },\n    "debugMode": false,\n    "debugOnFail": false,\n    "skipJsErrors": true,\n    "skipUncaughtErrors": true,\n    "appInitDelay": 3000,\n    "concurrency": 1,\n    "selectorTimeout": 3000,\n    "assertionTimeout": 1000,\n    "pageLoadTimeout": 1000,\n    "hostname": "localhost",\n    "developmentMode": false,\n    "tsConfigPath": "tsconfig.json",\n    "disablePageCaching": true,\n    "color": true,\n    "appCommand": "node server.js",\n    "speed": 0.1,\n    "proxy": "proxy.corp.mycompany.com",\n    "ssl": {\n        "pfx": "path/to/file.pfx",\n        "rejectUnauthorized": true\n    }\n}\n')))}f.isMDXComponent=!0}}]);