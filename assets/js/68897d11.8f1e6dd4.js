"use strict";(self.webpackChunktech_blog=self.webpackChunktech_blog||[]).push([[8038],{6792:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=n(5893),r=n(1151);const o={id:"testcafe",title:"Testcafe Test Framework"},i=void 0,a={id:"projects/testcafe",title:"Testcafe Test Framework",description:"TestCafeCI",source:"@site/docs/projects/testcafe.mdx",sourceDirName:"projects",slug:"/projects/testcafe",permalink:"/docs/projects/testcafe",draft:!1,unlisted:!1,editUrl:"https://github.com/dipjyotimetia/Docs/docs/projects/testcafe.mdx",tags:[],version:"current",frontMatter:{id:"testcafe",title:"Testcafe Test Framework"},sidebar:"sidebar",previous:{title:"Cypress Test Framework",permalink:"/docs/projects/cypress"},next:{title:"Playwright Test Framework",permalink:"/docs/projects/playwrighttestframework"}},c={},l=[{value:"Installation",id:"installation",level:3},{value:"Project Setup",id:"project-setup",level:3},{value:"Write Code",id:"write-code",level:3},{value:"Test",id:"test",level:3},{value:"Configurations",id:"configurations",level:3},{value:"Full Configurations",id:"full-configurations",level:3}];function d(e){const t={a:"a",code:"code",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://github.com/TestautoDev/TestCafeTestFramework/workflows/TestCafeCI/badge.svg",alt:"TestCafeCI"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"https://raw.githubusercontent.com/DevExpress/testcafe-gh-page-assets/master/src/images/testcafe-ogp-icon.png",alt:"img"})}),"\n",(0,s.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Install ",(0,s.jsx)(t.a,{href:"https://nodejs.org/en/download/",children:"nodejs 14.5.1 lts"})]}),"\n",(0,s.jsxs)(t.li,{children:["Install ",(0,s.jsx)(t.a,{href:"https://code.visualstudio.com/download",children:"VS_Code"})]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"project-setup",children:"Project Setup"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"git clone repo https://github.com/dipjyotimetia/TestCafeTestFramework.git\nnpm install\n"})}),"\n",(0,s.jsx)(t.h3,{id:"write-code",children:"Write Code"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Add new spec file with the format ",(0,s.jsx)(t.code,{children:"TC00*\\_SampleTest*\\_spec.ts"})]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:"import { Selector } from \"testcafe\";\nimport * as selector from \"../src/selectors/index\";\nimport * as pages from \"../src/pageObjects/index\";\n\nfixture('Test TodoMVC App')\n    .page('http://todomvc.com/examples/vanillajs/')\n\ntest.skip('Create todo', async t => {\n    await t\n        .maximizeWindow()\n        .typeText(selector.input, 'write blog post about JS')\n        .pressKey('enter')\n\n    await t\n        .maximizeWindow()\n        .expect(selector.todoItems.count)\n        .eql(1)\n\n    await t\n        .maximizeWindow()\n        .expect(selector.firstTodoItem.textContent)\n        .contains('write blog post about JS')\n})\n"})}),"\n",(0,s.jsx)(t.h3,{id:"test",children:"Test"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"test:chrome"})," run tests in chrome browser"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"configurations",children:"Configurations"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:'title="runner.config.ts"',children:".filter((testName, fixtureName, fixturePath, testMeta, fixtureMeta) => {\n    return fixturePath.startsWith('D') &&\n        testName.match(someRe) &&\n        fixtureName.match(anotherRe) &&\n        testMeta.mobile === 'true' &&\n        fixtureMeta.env === 'staging';\n});\n\n.browsers(['chrome', 'firefox'])\n.browsers('chrome:headless')\n.browsers('chrome:headless --no-sandbox --disable-gpu')\n.concurrency(3);\n\n.screenshots({\n    path: 'reports/screenshots/',\n    takeOnFails: true,\n    pathPattern: '${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png'\n});\n\n.video('reports/videos/', {\n    singleFile: true,\n    failedOnly: true,\n    pathPattern: '${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.mp4'\n}, {\n    r: 20,\n    aspect: '4:3'\n});\n\n"})}),"\n",(0,s.jsx)(t.h3,{id:"full-configurations",children:"Full Configurations"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:'title=".testcaferc.json"',children:'{\n    "browsers": ["chrome","edge", "firefox"],\n    "reporter": {\n        "name": "xunit",\n        "output": "reports/report.xml"\n    },\n    "screenshots": {\n        "takeOnFails": true,\n        "fullPage": true,\n        "path": "screenshot",\n        "pathPattern": "${DATE}_${TIME}/test-${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.png"\n    },\n    "videoOptions": {\n        "singleFile": true,\n        "failedOnly": true,\n        "pathPattern": "${TEST_INDEX}/${USERAGENT}/${FILE_INDEX}.mp4"\n    },\n    "debugMode": true,\n    "debugOnFail": true,\n    "skipJsErrors": true,\n    "skipUncaughtErrors": true,\n    "filter": {\n        "test": "Click a label",\n        "testGrep": "Click.*",\n        "fixture": "Sample fixture",\n        "fixtureGrep": "Page.*",\n        "testMeta": {\n            "device": "mobile",\n            "env": "production"\n        },\n        "fixtureMeta": {\n            "device": "mobile",\n            "env": "production"\n        }\n    },\n    "debugMode": false,\n    "debugOnFail": false,\n    "skipJsErrors": true,\n    "skipUncaughtErrors": true,\n    "appInitDelay": 3000,\n    "concurrency": 1,\n    "selectorTimeout": 3000,\n    "assertionTimeout": 1000,\n    "pageLoadTimeout": 1000,\n    "hostname": "localhost",\n    "developmentMode": false,\n    "tsConfigPath": "tsconfig.json",\n    "disablePageCaching": true,\n    "color": true,\n    "appCommand": "node server.js",\n    "speed": 0.1,\n    "proxy": "proxy.corp.mycompany.com",\n    "ssl": {\n        "pfx": "path/to/file.pfx",\n        "rejectUnauthorized": true\n    }\n}\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var s=n(7294);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);